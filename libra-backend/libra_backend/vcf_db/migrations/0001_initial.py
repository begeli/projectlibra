# Generated by Django 2.2 on 2020-03-02 18:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VCF',
            fields=[
                ('chrom', models.CharField(max_length=15)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('vcf_id', models.TextField()),
                ('variant_id', models.IntegerField(primary_key=True, serialize=False)),
                ('anno_id', models.IntegerField()),
                ('ref', models.TextField()),
                ('alt', models.TextField()),
                ('qual', models.IntegerField()),
                ('vcf_filter', models.TextField()),
                ('variant_type', models.CharField(max_length=15)),
                ('sub_type', models.TextField()),
                ('call_rate', models.FloatField()),
                ('num_hom_ref', models.IntegerField()),
                ('num_het', models.IntegerField()),
                ('num_hom_alt', models.IntegerField()),
                ('num_unknown', models.IntegerField()),
                ('aaf', models.FloatField()),
                ('hwe', models.FloatField()),
                ('inbreeding_coeff', models.FloatField()),
                ('pi', models.FloatField()),
                ('gts', models.BinaryField()),
                ('gt_types', models.BinaryField()),
                ('gt_phases', models.BinaryField()),
                ('gt_depths', models.BinaryField()),
                ('gt_ref_depths', models.BinaryField()),
                ('gt_alt_depths', models.BinaryField()),
                ('gt_alt_freqs', models.BinaryField()),
                ('gt_quals', models.BinaryField()),
                ('gt_phred_II_homref', models.BinaryField()),
                ('gt_phred_II_het', models.BinaryField()),
                ('gt_phred_II_homalt', models.BinaryField()),
                ('gene', models.CharField(max_length=60)),
                ('transcript', models.CharField(max_length=60)),
                ('is_exonic', models.BooleanField()),
                ('is_coding', models.BooleanField()),
                ('is_lof', models.BooleanField()),
                ('is_splicing', models.BooleanField()),
                ('exon', models.TextField()),
                ('codon_change', models.TextField()),
                ('aa_change', models.TextField()),
                ('aa_length', models.TextField()),
                ('biotype', models.TextField()),
                ('impact', models.CharField(default=None, max_length=60)),
                ('impact_so', models.TextField(default=None)),
                ('impact_severity', models.CharField(max_length=15)),
                ('polyphen_pred', models.TextField()),
                ('polyphen_score', models.FloatField()),
                ('sift_pred', models.TextField()),
                ('sift_score', models.FloatField()),
                ('pfam_domain', models.TextField()),
                ('anc_allele', models.TextField()),
                ('rms_bq', models.FloatField()),
                ('cigar', models.TextField()),
                ('depth', models.IntegerField(default=None)),
                ('strand_bias', models.FloatField(default=None)),
                ('rms_map_qual', models.FloatField(default=None)),
                ('in_hom_run', models.IntegerField(default=None)),
                ('num_mapq_zero', models.IntegerField(default=None)),
                ('num_alleles', models.IntegerField(default=None)),
                ('num_reads_w_dels', models.FloatField(default=None)),
                ('hoplotype_score', models.FloatField(default=None)),
                ('allele_count', models.IntegerField(default=None)),
                ('allele_bal', models.FloatField(default=None)),
                ('info', models.BinaryField()),
                ('in_dbsnp', models.BooleanField()),
                ('rs_ids', models.TextField(default=None)),
                ('in_hm2', models.BooleanField()),
                ('in_hm3', models.BooleanField()),
                ('in_esp', models.BooleanField()),
                ('in_1kg', models.BooleanField()),
                ('aaf_esp_ea', models.FloatField()),
                ('aaf_esp_aa', models.FloatField()),
                ('aaf_esp_all', models.FloatField()),
                ('aaf_1kg_amr', models.FloatField()),
                ('aaf_1kg_eas', models.FloatField()),
                ('aaf_1kg_sas', models.FloatField()),
                ('aaf_1kg_afr', models.FloatField()),
                ('aaf_1kg_eur', models.FloatField()),
                ('aaf_1kg_all', models.FloatField()),
                ('in_exac', models.BooleanField()),
                ('aaf_exac_all', models.FloatField()),
                ('aaf_adj_exac_afr', models.FloatField()),
                ('aaf_adj_exac_amr', models.FloatField()),
                ('aaf_adj_exac_eas', models.FloatField()),
                ('aaf_adj_exac_fin', models.FloatField()),
                ('aaf_adj_exac_nfe', models.FloatField()),
                ('aaf_adj_exac_oth', models.FloatField()),
                ('aaf_adj_exac_sas', models.FloatField()),
                ('max_aaf_all', models.FloatField()),
                ('exac_num_het', models.IntegerField()),
                ('exac_num_hom_alt', models.IntegerField()),
                ('exac_num_chroms', models.IntegerField()),
                ('aaf_gnomad_all', models.FloatField()),
                ('aaf_gnomad_afr', models.FloatField()),
                ('aaf_gnomad_amr', models.FloatField()),
                ('aaf_gnomad_asj', models.FloatField()),
                ('aaf_gnomad_eas', models.FloatField()),
                ('aaf_gnomad_fin', models.FloatField()),
                ('aaf_gnomad_nfe', models.FloatField()),
                ('aaf_gnomad_oth', models.FloatField()),
                ('gnomad_num_het', models.IntegerField()),
                ('gnomad_num_hom_alt', models.IntegerField()),
                ('gnomad_num_chroms', models.IntegerField()),
                ('in_omim', models.BooleanField()),
                ('clinvar_causal_allele', models.TextField()),
                ('clinvar_sig', models.TextField(default=None)),
                ('clinvar_disease_name', models.TextField(default=None)),
                ('clinvar_dbsource', models.TextField()),
                ('clinvar_dsource_id', models.TextField()),
                ('clinvar_origin', models.TextField(default=None)),
                ('clinvar_dsdb', models.TextField(default=None)),
                ('clinvar_dsdbid', models.TextField(default=None)),
                ('clinvar_disease_acc', models.TextField()),
                ('clinvar_in_locus_spec_db', models.BooleanField()),
                ('clinvar_on_diag_assay', models.BooleanField()),
                ('clinvar_gene_phenotype', models.TextField()),
                ('geno2mp_hpo_ct', models.IntegerField()),
                ('sv_cipos_start_left', models.IntegerField()),
                ('sv_cipos_end_left', models.IntegerField()),
                ('sv_cipos_start_right', models.IntegerField()),
                ('sv_cipos_end_right', models.IntegerField()),
                ('sv_length', models.IntegerField()),
                ('sv_is_precise', models.BooleanField()),
                ('sv_tool', models.TextField()),
                ('sv_evidence_type', models.TextField()),
                ('sv_event_id', models.TextField()),
                ('sv_mate_id', models.TextField()),
                ('sv_strand', models.TextField()),
                ('exome_chip', models.BooleanField()),
                ('cyto_band', models.TextField(default=None)),
                ('rmsk', models.TextField(default=None)),
                ('in_cpg_island', models.BooleanField()),
                ('in_segdup', models.BooleanField()),
                ('is_conserved', models.BooleanField()),
                ('gerp_bp_score', models.FloatField()),
                ('gerp_element_pval', models.FloatField()),
                ('recomb_rate', models.FloatField()),
                ('cadd_raw', models.FloatField()),
                ('cadd_scaled', models.FloatField()),
                ('fitcons', models.FloatField()),
            ],
        ),
    ]
